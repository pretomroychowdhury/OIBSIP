# -*- coding: utf-8 -*-
"""SALES PREDICTION .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WWCWhAOsXGEL7alhTj4RPK5-MRvgCi0o
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import seaborn as sns
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display

df=pd.read_csv("/content/Advertising (1).csv")
df=df.drop('Unnamed: 0', axis=1)
df

df.info()

df.shape

df.isnull().sum()

df.describe()

df.keys()

correlation_matrix = df.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.show()

for col in df.columns:
    if col != 'Sales':
        plt.plot(df[col], df['Sales'], 'o')
        plt.xlabel(col)
        plt.ylabel('Sales')
        plt.show()

import numpy as np
df = df[['TV', 'Radio', 'Newspaper', 'Sales']]

df['TV_sq'] = df['TV']**2
df['Radio_sq'] = df['Radio']**2
df['TV_Radio'] = df['TV'] * df['Radio']
X = df[['TV', 'Radio', 'Newspaper', 'TV_sq', 'Radio_sq', 'TV_Radio']]

y = df[['Sales']].values

X = df.drop('Sales', axis=1)
y = df['Sales']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print('Mean squared error:', mse)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df[['TV', 'Radio', 'Newspaper','TV_sq', 'Radio_sq', 'TV_Radio']])
X_train, X_test, y_train, y_test = train_test_split(scaled_data, df['Sales'], test_size=0.3, random_state=42)
new_data = [[100, 50, 25, 10000, 2500, 625]] 
new_data_scaled = scaler.transform(new_data)
y_pred = model.predict(new_data_scaled)
print("Predicted Sales: ", y_pred[0])